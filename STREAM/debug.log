Function "lua_likwid_startProgram" not defined.
Breakpoint 1 (lua_likwid_startProgram) pending.
Function "rocmon_markerInit" not defined.
Breakpoint 2 (rocmon_markerInit) pending.
Starting program: /var/tmp/likwid-lua/bin/likwid-lua /var/tmp/likwid-lua/bin/likwid-perfctr -C 0 -g ENERGY -I 0 -R INSTS -V 3 -m ./stream_c.exe
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
[Detaching after vfork from child process 3234131]
[New Thread 0x7fffeacef700 (LWP 3234150)]
[New Thread 0x7ffeea3ff700 (LWP 3234151)]
[Thread 0x7ffeea3ff700 (LWP 3234151) exited]
[Detaching after fork from child process 3234162]
[Detaching after fork from child process 3234163]
[Detaching after fork from child process 3234164]
[Detaching after fork from child process 3234165]
[Detaching after fork from child process 3234166]

Thread 1 "likwid-lua" hit Breakpoint 1, lua_likwid_startProgram (L=0x6042a8) at ./src/luawid.c:1992
1992	    exec = (char *)luaL_checkstring(L, 1);
Missing separate debuginfos, use: yum debuginfo-install comgr-2.4.0.50400-72.el8.x86_64 comgr5.4.0-2.4.0.50400-72.el8.x86_64 elfutils-libelf-0.187-4.el8.x86_64 glibc-2.28-211.el8.x86_64 hip-runtime-amd5.4.0-5.4.22801.50400-72.el8.x86_64 libdrm-2.4.111-1.el8.x86_64 libgcc-8.5.0-15.el8.x86_64 libstdc++-8.5.0-15.el8.x86_64 ncurses-libs-6.1-9.20180224.el8.x86_64 numactl-libs-2.0.12-13.el8.x86_64 rocm-smi-lib-5.0.0.50400-72.el8.x86_64 rocm-smi-lib5.4.0-5.0.0.50400-72.el8.x86_64 zlib-1.2.11-20.el8.x86_64
1993	    int nrThreads = luaL_checknumber(L,2);
1994	    CpuTopology_t cputopo = get_cpuTopology();
1995	    if (nrThreads > cputopo->numHWThreads)
2001	    int *cpus = malloc(cputopo->numHWThreads * sizeof(int));
2002	    if (!cpus)
2005	    if (nrThreads > 0)
2007	        if (!lua_istable(L, -1)) {
2014	            lua_rawgeti(L,-1,status);
2018	            cpus[status-1] = ((lua_Unsigned)lua_tointegerx(L,-1, NULL));
2020	            lua_pop(L,1);
2012	        for (status = 1; status<=nrThreads; status++)
2036	    int args = parse(exec, argv, MAX_NUM_CLIARGS);
2037	    if (args < 0)
2043	    ppid = getpid();
2044	    pid = fork();
[New inferior 2 (process 3234359)]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Reading symbols from /lib64/ld-linux-x86-64.so.2...done.
Reading symbols from /var/tmp/likwid-lua/lib/liblikwid.so...done.
2045	    if (pid < 0)
Missing separate debuginfos, use: yum debuginfo-install comgr-2.4.0.50400-72.el8.x86_64 comgr5.4.0-2.4.0.50400-72.el8.x86_64 elfutils-libelf-0.187-4.el8.x86_64 glibc-2.28-211.el8.x86_64 hip-runtime-amd5.4.0-5.4.22801.50400-72.el8.x86_64 libdrm-2.4.111-1.el8.x86_64 libgcc-8.5.0-15.el8.x86_64 libstdc++-8.5.0-15.el8.x86_64 ncurses-libs-6.1-9.20180224.el8.x86_64 numactl-libs-2.0.12-13.el8.x86_64 rocm-smi-lib-5.0.0.50400-72.el8.x86_64 rocm-smi-lib5.4.0-5.0.0.50400-72.el8.x86_64 zlib-1.2.11-20.el8.x86_64
2050	    else if ( pid == 0)
2066	        signal(SIGCHLD, catch_sigchild);
  Num  Description       Executable        
* 1    process 3234127   /var/tmp/likwid-lua/bin/likwid-lua 
  2    process 3234359   /var/tmp/likwid-lua/bin/likwid-lua 
[Switching to inferior 2 [process 3234359] (/var/tmp/likwid-lua/bin/likwid-lua)]
[Switching to thread 2.1 (process 3234359)]
#0  0x00007ffff7124a63 in fork () from /lib64/libc.so.6
Tracepoint 3 at 0x7ffff7124a63
Single stepping until exit from function fork,
which has no line number information.
lua_likwid_startProgram (L=0x6042a8) at ./src/luawid.c:2045
2045	    if (pid < 0)
2050	    else if ( pid == 0)
2052	        if (nrThreads > 0)
2054	            affinity_pinProcesses(nrThreads, cpus);
2056	        timer_sleep(10);
2057	        status = execvp(*argv, argv);
process 3234359 is executing new program: /storage/users/kraljic/workspace/STREAM/stream_c.exe
Reading symbols from /storage/users/kraljic/workspace/STREAM/stream_c.exe...done.
Reading symbols from /lib64/ld-linux-x86-64.so.2...done.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Reading symbols from /var/tmp/likwid-lua/lib/liblikwid.so.5.2...done.
Can not resume the parent process over vfork in the foreground while
holding the child stopped.  Try "set detach-on-fork" or "set schedule-multiple".
0x00007ffff6008e65 in clone () from /lib64/libc.so.6
Missing separate debuginfos, use: yum debuginfo-install glibc-2.28-211.el8.x86_64 libgomp-8.5.0-15.el8.x86_64
Single stepping until exit from function clone,
which has no line number information.
Can not resume the parent process over vfork in the foreground while
holding the child stopped.  Try "set detach-on-fork" or "set schedule-multiple".
0x00007ffff6008e65 in clone () from /lib64/libc.so.6
Single stepping until exit from function clone,
which has no line number information.
[Detaching after vfork from child process 3234784]
0x00007ffff60ee6fd in __spawnix () from /lib64/libc.so.6
Run till exit from #0  0x00007ffff60ee6fd in __spawnix () from /lib64/libc.so.6
0x00007ffff60eed0b in __spawni () from /lib64/libc.so.6
Run till exit from #0  0x00007ffff60eed0b in __spawni () from /lib64/libc.so.6
0x00007ffff60ee4af in posix_spawn@@GLIBC_2.15 () from /lib64/libc.so.6
Run till exit from #0  0x00007ffff60ee4af in posix_spawn@@GLIBC_2.15 () from /lib64/libc.so.6
0x00007ffff6058202 in _IO_proc_open@@GLIBC_2.2.5 () from /lib64/libc.so.6
Run till exit from #0  0x00007ffff6058202 in _IO_proc_open@@GLIBC_2.2.5 () from /lib64/libc.so.6
0x00007ffff605842c in popen@@GLIBC_2.2.5 () from /lib64/libc.so.6
Program not restarted.
Run till exit from #0  0x00007ffff605842c in popen@@GLIBC_2.2.5 () from /lib64/libc.so.6
default_configuration () at ./src/configuration.c:79
79	    if (fp == NULL)
Run till exit from #0  default_configuration () at ./src/configuration.c:79
0x00007ffff69d4ffd in init_configuration () at ./src/configuration.c:206
206	        return default_configuration();
Value returned is $1 = 0
Run till exit from #0  0x00007ffff69d4ffd in init_configuration () at ./src/configuration.c:206
0x00007ffff69cf0e6 in topology_init () at ./src/topology.c:1301
1301	    if (init_configuration())
Value returned is $2 = 0
Run till exit from #0  0x00007ffff69cf0e6 in topology_init () at ./src/topology.c:1301
likwid_markerInit () at ./src/libperfctr.c:190
190	    numa_init();
Value returned is $3 = 0
Run till exit from #0  likwid_markerInit () at ./src/libperfctr.c:190
[Detaching after fork from child process 3235095]
[Detaching after fork from child process 3235096]
[Detaching after fork from child process 3235097]
[Detaching after fork from child process 3235098]
[Detaching after fork from child process 3235099]
main (argc=<optimized out>, argv=<optimized out>) at stream.c:345
345	    LIKWID_MARKER_REGISTER("stream");
likwid_markerRegisterRegion (regionTag=regionTag@entry=0x4023f3 "stream") at ./src/libperfctr.c:500
500	    if ( ! likwid_init )
506	    uint64_t tmp = 0x0ULL;
507	    bstring tag = bfromcstralloc(100, regionTag);
510	    sprintf(groupSuffix, "-%d", groupSet->activeGroup);
511	    bcatcstr(tag, groupSuffix);
512	    int cpu_id = hashTable_get(tag, &results);
513	    bdestroy(tag);
517	    ret =  HPMaddThread(cpu_id);
520	    HPMread(cpu_id, MSR_DEV, reg, &tmp);
522	    return ret;
main (argc=<optimized out>, argv=<optimized out>) at stream.c:346
346	    LIKWID_MARKER_START("stream");
354	    printf("Setting ROCm marker start\n");
355	    ROCMON_MARKER_INIT;

Thread 2.1 "stream_c.exe" hit Breakpoint 2, rocmon_markerInit () at ./src/rocmon_marker.c:238
238	    if (rocmon_marker_initialized)
244	    char* eventStr = getenv("LIKWID_ROCMON_EVENTS");
245	    char* gpuStr = getenv("LIKWID_ROCMON_GPUS");
246	    char* gpuFileStr = getenv("LIKWID_ROCMON_FILEPATH");
247	    char* verbosityStr = getenv("LIKWID_ROCMON_VERBOSITY");
250	    if ((eventStr == NULL) || (gpuStr == NULL) || (gpuFileStr == NULL))
255	    if (verbosityStr != NULL) {
256	        int v = atoi(verbosityStr);
257	        rocmon_setVerbosity(v);
261	    timer_init();
264	    main_tid = gettid();
267	    ret = _rocmon_parse_gpustr(gpuStr, &num_gpus, &gpu_ids);
275	    gpu_maps = malloc(num_gpus * sizeof(Map_t));
276	    if (!gpu_maps)
284	    bstring bGeventStr = bfromcstr(eventStr);
285	    struct bstrList* gEventStrings = bsplit(bGeventStr,'|');
286	    num_groups = gEventStrings->qty;
289	    gpu_groups = malloc(num_groups * sizeof(int));
290	    if (!gpu_groups)
$4 = {qty = 1, mlen = 4, entry = 0x6d6a90}
$5 = (bstring) 0x6d6d60
301	    ret = rocmon_init(num_gpus, gpu_ids);
[New Thread 0x7fffe58f4700 (LWP 3235975)]
[New Thread 0x7ffee4fff700 (LWP 3235976)]
[Thread 0x7ffee4fff700 (LWP 3235976) exited]
302	    if (ret < 0)
Missing separate debuginfos, use: yum debuginfo-install elfutils-libelf-0.187-4.el8.x86_64 libdrm-2.4.111-1.el8.x86_64 libgcc-8.5.0-15.el8.x86_64 libstdc++-8.5.0-15.el8.x86_64 numactl-libs-2.0.12-13.el8.x86_64 rocm-smi-lib-5.0.0.50400-72.el8.x86_64 rocm-smi-lib5.4.0-5.0.0.50400-72.el8.x86_64 zlib-1.2.11-20.el8.x86_64
314	    for (int i = 0; i < gEventStrings->qty; i++)
316	        ret = rocmon_addEventSet(bdata(gEventStrings->entry[i]), &gpu_groups[i]);
rocmon_addEventSet (eventString=0x6d69a0 "INSTS", gid=0x69cf20) at ./src/rocmon.c:1305
1305	    if (!eventString)
1311	    if (!rocmon_initialized)
1317	    if (rocmon_context->numActiveGroups == rocmon_context->numGroups)
$6 = {groups = 0x0, numGroups = 0, numActiveGroups = 0, activeGroup = 0, devices = 0x6dcf20, numDevices = 1, hsa_timestamp_factor = 1, 
  smiEvents = 0x83c330}
1319	        GroupInfo* tmpInfo = (GroupInfo*) realloc(rocmon_context->groups, (rocmon_context->numGroups+1) * sizeof(GroupInfo));
1320	        if (tmpInfo == NULL)
1325	        rocmon_context->groups = tmpInfo;
1326	        rocmon_context->numGroups++;
1330	    int err = _rocmon_parse_eventstring(eventString, &rocmon_context->groups[rocmon_context->numActiveGroups]);
1337	    for (int i = 0; i < rocmon_context->numDevices; i++)
1339	        RocmonDevice* device = &rocmon_context->devices[i];
1342	        int numEvents = rocmon_context->groups[rocmon_context->numActiveGroups].nevents;
1343	        RocmonEventResult* tmpResults = (RocmonEventResult*) malloc(numEvents * sizeof(RocmonEventResult));
1344	        if (tmpResults == NULL)
1351	        RocmonEventResultList* tmpGroupResults = (RocmonEventResultList*) realloc(device->groupResults, (device->numGroupResults+1) * sizeof(RocmonEventResultList));
1352	        if (tmpGroupResults == NULL)
1358	        device->groupResults = tmpGroupResults;
1359	        device->groupResults[device->numGroupResults].results = tmpResults;
1360	        device->groupResults[device->numGroupResults].numResults = numEvents;
1361	        device->numGroupResults++;
1337	    for (int i = 0; i < rocmon_context->numDevices; i++)
1364	    *gid = rocmon_context->numActiveGroups;
1365	    rocmon_context->numActiveGroups++;
1366	    return 0;
1347	            return -ENOMEM;
rocmon_markerInit () at ./src/rocmon_marker.c:317
317	        if (ret < 0)
314	    for (int i = 0; i < gEventStrings->qty; i++)
326	    bstrListDestroy(gEventStrings);
327	    bdestroy(bGeventStr);
328	    active_group = 0;
331	    for (int i = 0; i < num_gpus; i++)
333	        init_smap(&gpu_maps[i]);
$7 = (Map_t) 0x69cf40
$8 = {num_values = 7170112, size = 0, max_size = 7170128, id = 0, ghash = 0x69cfb0, key_type = 33, values = 0x0, value_func = 0x0}
331	    for (int i = 0; i < num_gpus; i++)
337	    ret = rocmon_setupCounters(gpu_groups[active_group]);
$9 = {num_values = 0, size = 0, max_size = 0, id = 0, ghash = 0x852540, key_type = MAP_KEY_TYPE_STR, values = 0x0, value_func = 0x0}
rocmon_setupCounters (gid=0) at ./src/rocmon.c:1551
1551	    if (!rocmon_initialized)
1557	    GroupInfo* group = &rocmon_context->groups[gid];
1566	    smiEvents = (const char**) malloc(group->nevents * sizeof(const char*));
1567	    if (smiEvents == NULL)
1572	    rocEvents = (const char**) malloc(group->nevents * sizeof(const char*));
1573	    if (rocEvents == NULL)
1581	    for (int i = 0; i < group->nevents; i++)
1583	        const char* name = group->events[i];
1584	        if (strncmp(name, "RSMI_", 5) == 0)
1590	        else if (strncmp(name, "ROCP_", 5) == 0)
1593	            rocEvents[numRocEvents] = name + 5; // +5 removes 'ROCP_' prefix
1594	            numRocEvents++;
1583	        const char* name = group->events[i];
1584	        if (strncmp(name, "RSMI_", 5) == 0)
$10 = 82 'R'
$11 = 82 'R'
$12 = 0x851840 "ROCP_SQ_INSTS_BRANCH"
1590	        else if (strncmp(name, "ROCP_", 5) == 0)
1593	            rocEvents[numRocEvents] = name + 5; // +5 removes 'ROCP_' prefix
1594	            numRocEvents++;
1605	    for (int i = 0; i < rocmon_context->numDevices; i++)
1607	        RocmonDevice* device = &rocmon_context->devices[i];
1610	        ROCMON_DEBUG_PRINT(DEBUGLEV_INFO, SETUP ROCPROFILER WITH %d events, numRocEvents);
$13 = {deviceId = 0, hsa_agent = {handle = 8136992}, context = 0x0, rocMetrics = 0x83c060, numRocMetrics = 0, smiMetrics = 0x846500, 
  activeRocEvents = 0x0, numActiveRocEvents = 0, activeSmiEvents = 0x4ad2a988, numActiveSmiEvents = -436171388, groupResults = 0x851820, 
  numGroupResults = 1, time = {start = 0, read = 0, stop = 0}}
$14 = {num_values = 31, size = 31, max_size = 0, id = 0, ghash = 0x83cca0, key_type = MAP_KEY_TYPE_STR, values = 0x851d20, 
  value_func = 0x7ffff606bfe0 <free>}
$15 = {key = 0x843ec0, value = 0x843ef0, iptr = 0x843f50}
Attempt to dereference a generic pointer.
$16 = (mpointer) 0x843ef0
Attempt to dereference a generic pointer.
Attempt to dereference a generic pointer.
$17 = {agent_index = 8684656, kind = ROCPROFILER_INFO_KIND_METRIC, {metric = {name = 0x0, instances = 0, 
      expr = 0x21 <error: Cannot access memory at address 0x21>, description = 0x6f7080 "", block_name = 0x0, block_counters = 779055918}, trace = {
      name = 0x0, description = 0x0, parameter_count = 33}, trace_parameter = {code = 0, trace_name = 0x0, 
      parameter_name = 0x21 <error: Cannot access memory at address 0x21>, description = 0x6f7080 ""}}}
1611	        ret = _rocmon_setupCounters_rocprofiler(device, rocEvents, numRocEvents);
_rocmon_setupCounters_rocprofiler (numEvents=0, events=0x0, device=0x6dcf20) at ./src/rocmon.c:1611
1611	        ret = _rocmon_setupCounters_rocprofiler(device, rocEvents, numRocEvents);
1381	    if (numEvents <= 0)
$18 = 0
1387	    rocprofiler_feature_t* features = (rocprofiler_feature_t*) malloc(numEvents * sizeof(rocprofiler_feature_t));
1388	    if (features == NULL)
1395	        features[i].kind = ROCPROFILER_FEATURE_KIND_METRIC;
1396	        features[i].name = events[i];
1397	        ROCMON_DEBUG_PRINT(DEBUGLEV_DEVELOP, SETUP EVENT %d %s, i, events[i]);
1395	        features[i].kind = ROCPROFILER_FEATURE_KIND_METRIC;
1396	        features[i].name = events[i];
1397	        ROCMON_DEBUG_PRINT(DEBUGLEV_DEVELOP, SETUP EVENT %d %s, i, events[i]);
1401	    FREE_IF_NOT_NULL(device->activeRocEvents);
1403	    device->numActiveRocEvents = numEvents;
$19 = 0
1407	    rocprofiler_properties_t properties = {};
$20 = 2
1408	    properties.queue_depth = 128;
1412	    ROCM_CALL(rocprofiler_open, (device->hsa_agent, device->activeRocEvents, device->numActiveRocEvents, &device->context, mode, &properties), return -1);
$21 = {handle = 8136992}
$22 = (rocprofiler_feature_t *) 0x84d360
$23 = {kind = ROCPROFILER_FEATURE_KIND_METRIC, {name = 0x851805 "SQ_INSTS", counter = {block = 0x851805 "SQ_INSTS", event = 8666960}}, 
  parameters = 0x844ee0, parameter_count = 8666992, data = {kind = 8666784, {result_int32 = 8667184, result_int64 = 8667184, 
      result_float = 1.21453116e-38, result_double = 4.2821578605849186e-317, result_bytes = {ptr = 0x844030, size = 8668960, instance_count = 0, 
        copy = 16}}}}
$24 = (rocprofiler_feature_t *) 0x84d360
$25 = 2
There is no member named contect.
Attempt to dereference a generic pointer.
$26 = (rocprofiler_t *) 0x0
$27 = 7
Structure has no component named operator*.
$28 = {queue = 0x0, queue_depth = 128, handler = 0x0, handler_arg = 0x0}
Structure has no component named operator*.
$29 = {kind = ROCPROFILER_FEATURE_KIND_METRIC, {name = 0x851805 "SQ_INSTS", counter = {block = 0x851805 "SQ_INSTS", event = 8666960}}, 
  parameters = 0x844ee0, parameter_count = 8666992, data = {kind = 8666784, {result_int32 = 8667184, result_int64 = 8667184, 
      result_float = 1.21453116e-38, result_double = 4.2821578605849186e-317, result_bytes = {ptr = 0x844030, size = 8668960, instance_count = 0, 
        copy = 16}}}}
$30 = {kind = ROCPROFILER_FEATURE_KIND_METRIC, {name = 0x851845 "SQ_INSTS_BRANCH", counter = {block = 0x851845 "SQ_INSTS_BRANCH", event = 8669344}}, 
  parameters = 0x8448e0, parameter_count = 8704544, data = {kind = 8669376, {result_int32 = 8705024, result_int64 = 8705024, 
      result_float = 1.21983368e-38, result_double = 4.3008533046235514e-317, result_bytes = {ptr = 0x84d400, size = 8704768, instance_count = 0, 
        copy = 48}}}}
There is no member named type.
type = struct {
    rocprofiler_feature_kind_t kind;
    union {
        const char *name;
        struct {...} counter;
    };
    const rocprofiler_parameter_t *parameters;
    uint32_t parameter_count;
    rocprofiler_data_t data;
}
type = const struct {
    hsa_ven_amd_aqlprofile_parameter_name_t parameter_name;
    uint32_t value;
} *
$31 = (const rocprofiler_parameter_t *) 0x8448e0
$32 = {parameter_name = 1598243653, value = 1314213699}
Structure has no component named operator*.
$33 = {kind = 8669376, {result_int32 = 8705024, result_int64 = 8705024, result_float = 1.21983368e-38, result_double = 4.3008533046235514e-317, 
    result_bytes = {ptr = 0x84d400, size = 8704768, instance_count = 0, copy = 48}}}
type = struct {
    rocprofiler_data_kind_t kind;
    union {
        uint32_t result_int32;
        uint64_t result_int64;
        float result_float;
        double result_double;
        struct {...} result_bytes;
    };
}
rocmon_setupCounters (gid=<optimized out>) at ./src/rocmon.c:1620
1620	        ROCMON_DEBUG_PRINT(DEBUGLEV_INFO, SETUP ROCM SMI WITH %d events, numSmiEvents);
1621	        ret = _rocmon_setupCounters_smi(device, smiEvents, numSmiEvents);
1622	        if (ret < 0)
1629	    rocmon_context->activeGroup = gid;
1632	    free(smiEvents);
1633	    free(rocEvents);
1635	    return 0;
1626	            return ret;
rocmon_markerInit () at ./src/rocmon_marker.c:338
338	    if (ret)
349	    ret = rocmon_startCounters();
rocmon_startCounters () at ./src/rocmon.c:1703
1703	    if (!rocmon_initialized)
1710	    if (ret = _rocmon_get_timestamp(&timestamp))
1716	    for (int i = 0; i < rocmon_context->numDevices; i++)
1718	        RocmonDevice* device = &rocmon_context->devices[i];
1723	        ret = _rocmon_startCounters_rocprofiler(device);
_rocmon_startCounters_rocprofiler (device=<optimized out>) at ./src/rocmon.c:1719
1719	        device->time.start = timestamp;
rocmon_startCounters () at ./src/rocmon.c:1720
1720	        device->time.read = timestamp;
1723	        ret = _rocmon_startCounters_rocprofiler(device);
_rocmon_startCounters_rocprofiler (device=0x6dcf20) at ./src/rocmon.c:1723
1723	        ret = _rocmon_startCounters_rocprofiler(device);
$34 = {deviceId = 0, hsa_agent = {handle = 8136992}, context = 0x852cb0, rocMetrics = 0x83c060, numRocMetrics = 0, smiMetrics = 0x846500, 
  activeRocEvents = 0x84d360, numActiveRocEvents = 2, activeSmiEvents = 0x4ad2a988, numActiveSmiEvents = -436171388, groupResults = 0x851820, 
  numGroupResults = 1, time = {start = 911268377353381, read = 911268377353381, stop = 0}}
Attempt to dereference a generic pointer.
$35 = (rocprofiler_t *) 0x852cb0
1650	    for (int i = 0; i < device->numActiveRocEvents; i++)
1653	        result->lastValue = 0;
1654	        result->fullValue = 0;
1650	    for (int i = 0; i < device->numActiveRocEvents; i++)
1653	        result->lastValue = 0;
1654	        result->fullValue = 0;
1650	    for (int i = 0; i < device->numActiveRocEvents; i++)
1657	    if (device->context)
$36 = (rocprofiler_t *) 0x852cb0
1659	        ROCM_CALL(rocprofiler_start, (device->context, 0), return -1);
Attempt to dereference a generic pointer.
rocmon_startCounters () at ./src/rocmon.c:1727
1727	        _rocmon_startCounters_smi(device);
$37 = (rocprofiler_t *) 0x852cb0
Attempt to dereference a generic pointer.
1728	        if (ret < 0) return ret;
1716	    for (int i = 0; i < rocmon_context->numDevices; i++)
rocmon_markerInit () at ./src/rocmon_marker.c:350
350	    if (ret)
360	    rocmon_marker_initialized = 1;
main (argc=<optimized out>, argv=<optimized out>) at stream.c:356
356	    ROCMON_MARKER_REGISTER("roc_stream");
rocmon_markerRegisterRegion (regionTag=regionTag@entry=0x4023ef "roc_stream") at ./src/rocmon_marker.c:391
391	    if (!rocmon_marker_initialized)
Undefined command: "n+".  Try "help".
397	    if (gettid() != main_tid)
403	    for (int i = 0; i < num_gpus; i++)
406	        RocmonRegionResults* results = malloc(sizeof(RocmonRegionResults));
407	        if (results == NULL)
414	        results->label = bformat("%s-%d", regionTag, active_group);
415	        results->timeActive = 0;
417	        results->gpuId = gpu_ids[i];
418	        results->groupId = gpu_groups[active_group];
422	        int numEvents = rocmon_getNumberOfEvents(active_group);
425	        RocmonEventResult* tmpResults = malloc(numEvents * sizeof(RocmonEventResult));
426	        if (tmpResults == NULL)
432	        results->groupResults.results = tmpResults;
433	        results->groupResults.numResults = numEvents;
436	        for (int j = 0; j < numEvents; j++)
439	            res->lastValue = 0.0;
440	            res->fullValue = 0.0;
436	        for (int j = 0; j < numEvents; j++)
439	            res->lastValue = 0.0;
440	            res->fullValue = 0.0;
436	        for (int j = 0; j < numEvents; j++)
444	        add_smap(gpu_maps[i], bdata(results->label), results);
403	    for (int i = 0; i < num_gpus; i++)
main (argc=<optimized out>, argv=<optimized out>) at stream.c:357
357	    ROCMON_MARKER_START("roc_stream");
rocmon_markerStartRegion (regionTag=regionTag@entry=0x4023ef "roc_stream") at ./src/rocmon_marker.c:455
455	    if (!rocmon_marker_initialized)
461	    if (gettid() != main_tid)
468	    ROCMON_DEBUG_PRINT(DEBUGLEV_DETAIL, START REGION '%s' (group %d), regionTag, active_group);
469	    timer_start(&timestamp);
timer_start (time=0x7fffffffc7f0) at ./src/timer.c:560
560	    if (timer_initialized != 1)
565	    _timer_start(time);
_timer_start (time=0x7fffffffc7f0) at ./src/timer.c:565
565	    _timer_start(time);
188	        TSTART(&(time->start));
fRDTSC (cpu_c=0x7fffffffc7f0) at ./src/timer.c:63
63	    __asm__ volatile("xor %%eax,%%eax\n\t"           \
Run till exit from #0  fRDTSC (cpu_c=0x7fffffffc7f0) at ./src/timer.c:63
rocmon_markerStartRegion (regionTag=regionTag@entry=0x4023ef "roc_stream") at ./src/rocmon_marker.c:470
470	    rocmon_readCounters();
rocmon_readCounters () at ./src/rocmon.c:1784
1784	    if (!rocmon_initialized)
1790	    ret = _rocmon_readCounters(&_rocmon_get_read_time);
_rocmon_readCounters (getDestTimestampFunc=getDestTimestampFunc@entry=0x7ffff69d7160 <_rocmon_get_read_time>) at ./src/rocmon.c:723
723	    if (ret = _rocmon_get_timestamp(&timestamp))
728	    for (int i = 0; i < rocmon_context->numDevices; i++)
730	        RocmonDevice* device = &rocmon_context->devices[i];
735	            uint64_t* timestampDest = getDestTimestampFunc(device);
736	            if (timestampDest)
738	                *timestampDest = timestamp;
743	        ret = _rocmon_readCounters_rocprofiler(device);
_rocmon_readCounters_rocprofiler (device=0x6dcf20) at ./src/rocmon.c:743
743	        ret = _rocmon_readCounters_rocprofiler(device);
658	    if (!device->context)
663	    ROCM_CALL(rocprofiler_read, (device->context, 0), return -1);
There is no member named contextr.
Attempt to dereference a generic pointer.
664	    ROCM_CALL(rocprofiler_get_data, (device->context, 0), return -1);
$38 = (rocprofiler_t *) 0x852cb0
Attempt to dereference a generic pointer.
$39 = (rocprofiler_t *) 0x852cb0
Attempt to dereference a generic pointer.
A syntax error in expression, near `*context'.
665	    ROCM_CALL(rocprofiler_get_metrics, (device->context), return -1);
668	    RocmonEventResultList* groupResult = &device->groupResults[rocmon_context->activeGroup];
No symbol "rocmon_context_activeGroup" in current context.
$40 = 0
Structure has no component named operator*.
$41 = {results = 0x850d10, numResults = 2}
$42 = (RocmonEventResult *) 0x850d10
$43 = {lastValue = 0, fullValue = 0}
669	    for (int i = 0; i < device->numActiveRocEvents; i++)
674	        ret = _rocmon_getLastResult(device, i, &result->fullValue);
$44 = {kind = ROCPROFILER_FEATURE_KIND_METRIC, {name = 0x851805 "SQ_INSTS", counter = {block = 0x851805 "SQ_INSTS", event = 8666960}}, 
  parameters = 0x844ee0, parameter_count = 8666992, data = {kind = ROCPROFILER_DATA_KIND_INT64, {result_int32 = 0, result_int64 = 0, result_float = 0, 
      result_double = 0, result_bytes = {ptr = 0x0, size = 8668960, instance_count = 0, copy = 16}}}}
Structure has no component named operator*.
$45 = {kind = ROCPROFILER_FEATURE_KIND_METRIC, {name = 0x851805 "SQ_INSTS", counter = {block = 0x851805 "SQ_INSTS", event = 8666960}}, 
  parameters = 0x844ee0, parameter_count = 8666992, data = {kind = ROCPROFILER_DATA_KIND_INT64, {result_int32 = 0, result_int64 = 0, result_float = 0, 
      result_double = 0, result_bytes = {ptr = 0x0, size = 8668960, instance_count = 0, copy = 16}}}}
$46 = {kind = ROCPROFILER_DATA_KIND_INT64, {result_int32 = 0, result_int64 = 0, result_float = 0, result_double = 0, result_bytes = {ptr = 0x0, 
      size = 8668960, instance_count = 0, copy = 16}}}
$47 = {kind = ROCPROFILER_DATA_KIND_INT64, {result_int32 = 0, result_int64 = 0, result_float = 0, result_double = 0, result_bytes = {ptr = 0x0, 
      size = 8704768, instance_count = 0, copy = 48}}}
681	        result->lastValue = result->fullValue - result->lastValue;
669	    for (int i = 0; i < device->numActiveRocEvents; i++)
674	        ret = _rocmon_getLastResult(device, i, &result->fullValue);
$48 = {lastValue = 0, fullValue = 0}
681	        result->lastValue = result->fullValue - result->lastValue;
$49 = {lastValue = 0, fullValue = 0}
669	    for (int i = 0; i < device->numActiveRocEvents; i++)
747	        ret = _rocmon_readCounters_smi(device);
748	        if (ret < 0) return ret;
728	    for (int i = 0; i < rocmon_context->numDevices; i++)
rocmon_readCounters () at ./src/rocmon.c:1791
1791	    if (ret < 0) return ret;
rocmon_markerStartRegion (regionTag=regionTag@entry=0x4023ef "roc_stream") at ./src/rocmon_marker.c:473
473	    bstring tag = bformat("%s-%d", regionTag, active_group);
474	    for (int i = 0; i < num_gpus; i++)
477	        RocmonRegionResults* results = NULL;
478	        int ret = get_smap_by_key(gpu_maps[i], bdata(tag), (void**) &results);
479	        if (ret < 0)
486	        if (results->state == ROCMON_MARKER_STATE_START)
493	        results->startTime.start = timestamp.start;
496	        for (int j = 0; j < results->groupResults.numResults; j++)
498	            RocmonEventResult* res = &results->groupResults.results[j];
499	            res->lastValue = rocmon_getResult(results->gpuId, results->groupId, j);
$50 = {lastValue = 0, fullValue = 0}
496	        for (int j = 0; j < results->groupResults.numResults; j++)
No symbol "res" in current context.
No symbol "res" in current context.
498	            RocmonEventResult* res = &results->groupResults.results[j];
499	            res->lastValue = rocmon_getResult(results->gpuId, results->groupId, j);
rocmon_getResult (gpuIdx=0, groupId=0, eventId=1) at ./src/rocmon.c:1807
1807	    if (gpuIdx < 0 || gpuIdx >= rocmon_context->numDevices)
1814	    if (groupId < 0 || groupId >= device->numGroupResults)
1821	    if (eventId < 0 || eventId >= groupResult->numResults)
1827	    return groupResult->results[eventId].fullValue;
No symbol "results" in current context.
value has been optimized out
value has been optimized out
value has been optimized out
value has been optimized out
Run till exit from #0  rocmon_getResult (gpuIdx=0, groupId=<optimized out>, eventId=1) at ./src/rocmon.c:1827
0x00007ffff69cae54 in rocmon_markerStartRegion (regionTag=regionTag@entry=0x4023ef "roc_stream") at ./src/rocmon_marker.c:499
499	            res->lastValue = rocmon_getResult(results->gpuId, results->groupId, j);
Value returned is $51 = 0
496	        for (int j = 0; j < results->groupResults.numResults; j++)
502	        results->state = ROCMON_MARKER_STATE_START;
474	    for (int i = 0; i < num_gpus; i++)
505	    bdestroy(tag);
506	    return 0;
main (argc=<optimized out>, argv=<optimized out>) at stream.c:358
358	    printf("Set ROCm marker start\n");
362	    for (k=0; k<NTIMES; k++)
Function "ROCMON_MARKER_STOP" not defined.
Breakpoint 4 (ROCMON_MARKER_STOP) pending.
Undefined command: "finisj".  Try "help".
"finish" not meaningful in the outermost frame.
Program not restarted.
364		times[0][k] = mysecond();
374		times[0][k] = mysecond() - times[0][k];
376		times[1][k] = mysecond();
386		times[1][k] = mysecond() - times[1][k];
388		times[2][k] = mysecond();
398		times[2][k] = mysecond() - times[2][k];
Continuing.

Thread 2.1 "stream_c.exe" received signal SIGSEGV, Segmentation fault.
0x00007ffff606c001 in free () from /lib64/libc.so.6
